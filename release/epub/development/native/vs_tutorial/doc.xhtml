<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>在 Visual Studio 中配置 PM1 SDK</title>
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="visual-studio-pm1-sdk">
<h1>在 Visual Studio 中配置 PM1 SDK</h1>
<ol>
<li><p>创建一个 C++ 空项目（以 VS2017 为例）</p>
<p>打开 VS，依次点击菜单“文件”-&gt;“新建”-&gt;“项目”，弹出新建项目窗口。在新建项目窗口中选择 “Visual C++” -&gt; “其他” -&gt; “空项目” 创建项目，如下图所示。</p>
<blockquote>
<div><p>注意：如果找不到此项目类型，请检查 VS 中是否已经安装 C++。</p>
</div></blockquote>
<p><img alt="../../../_images/create.png" src="../../../_images/create.png" /></p>
<p><img alt="../../../_images/create1.png" src="../../../_images/create1.png" /></p>
</li>
<li><p>下载 SDK 文件</p>
<p>访问 PM1 SDK 的 <a class="reference external" href="https://github.com/autolaborcenter/pm1_sdk/releases">GitHub 发布页</a><span class="link-target"> [https://github.com/autolaborcenter/pm1_sdk/releases]</span>，下载最新版本的头文件（pm1_sdk.h）与静态库文件（pm1_sdk.lib、pm1_sdk_debug.lib），并将文件放置到项目路径下，按照上一步的项目名称位置，文件路径为 <code class="docutils literal notranslate"><span class="pre">C:\Users\user\source\repos\Project1\Project1</span></code>，如下图所示。</p>
<p><img alt="../../../_images/download.png" src="../../../_images/download.png" /></p>
</li>
<li><p>添加测试代码并运行</p>
<p>在解决方案资源管理器项目“源文件”项上右键“添加”-&gt;“新建项”，然后在弹出的添加新项窗口中选择 C++ 文件，添加一个源文件，如下图所示。</p>
<p><img alt="../../../_images/add.png" src="../../../_images/add.png" /></p>
<p><img alt="../../../_images/add1.png" src="../../../_images/add1.png" /></p>
<p>然后在 <code class="docutils literal notranslate"><span class="pre">源.cpp</span></code> 中添加如下代码</p>
<div class="highlight-c++ notranslate"><div class="highlight"><pre><span></span><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp"></span>
<span class="cp">#include</span> <span class="cpf">&quot;pm1_sdk.h&quot;                 // 头文件</span><span class="cp"></span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">autolabor</span><span class="o">::</span><span class="n">pm1</span><span class="p">;</span>      <span class="c1">// 命名空间</span>

<span class="cp">#ifdef _DEBUG                        </span><span class="c1">// 静态库</span>
<span class="cp">#pragma comment(lib, &quot;pm1_sdk_debug.lib&quot;)</span>
<span class="cp">#else</span>
<span class="cp">#pragma comment(lib, &quot;pm1_sdk.lib&quot;)</span>
<span class="cp">#endif</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;initializing...&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">auto</span> <span class="n">result</span> <span class="o">=</span> <span class="n">initialize</span><span class="p">();</span>     <span class="c1">// 初始化连接</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">result</span><span class="p">)</span>
	<span class="p">{</span>
	    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;connected to &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">result</span><span class="p">.</span><span class="n">value</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
	    <span class="n">unlock</span><span class="p">();</span>                   <span class="c1">// 解锁</span>
	    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;moving...&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
	    <span class="n">turn_around</span><span class="p">(</span><span class="mf">0.25</span><span class="p">,</span> <span class="mf">1.57</span><span class="p">);</span>    <span class="c1">// 以0.25rad/s的速度原地转90°</span>
	    <span class="n">shutdown</span><span class="p">();</span>                 <span class="c1">// 断开连接</span>
	<span class="p">}</span>
	<span class="k">else</span>
	<span class="p">{</span>
	    <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="n">result</span><span class="p">.</span><span class="n">error_info</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">system</span><span class="p">(</span><span class="s">&quot;pause&quot;</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>然后连接PM1点击运行测试代码</p>
<p><img alt="../../../_images/run.png" src="../../../_images/run.png" /></p>
</li>
</ol>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>